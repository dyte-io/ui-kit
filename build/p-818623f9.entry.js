import{r as t,c as s,h as i,H as e}from"./p-69f2ebde.js";import{d as h}from"./p-0dc8ab10.js";import{u as a}from"./p-2076e7ec.js";import{l as r}from"./p-e1ac2003.js";import{s as n}from"./p-1210aa77.js";import"./p-57e22a58.js";const o=()=>"undefined"!=typeof navigator&&void 0!==navigator.mediaDevices&&"getDisplayMedia"in navigator.mediaDevices,c=class{constructor(i){t(this,i),this.stateUpdate=s(this,"dyteStateUpdate",7),this.dyteAPIError=s(this,"dyteAPIError",7),this.screenShareListener=()=>{const t=this.meeting.participants.active.toArray().filter((t=>t.screenShareEnabled)).length;this.screenShareCount=t+(this.meeting.self.screenShareEnabled?1:0),this.screenShareEnabled=this.meeting.self.screenShareEnabled,this.getState(),this.meeting.__internals__.logger.info("dyteScreenShare::screenShareUpdate",{media:{screenshare:{enabled:this.screenShareEnabled,count:this.screenShareCount}}})},this.participantLeftListener=({screenShareEnabled:t})=>{t&&(this.screenShareCount=Math.max(this.screenShareCount-1,0),this.getState(),this.meeting.__internals__.logger.info("dyteScreenShare::screenShareUpdate",{media:{screenshare:{enabled:this.screenShareEnabled,count:this.screenShareCount}}}))},this.stageStatusListener=()=>{this.stageStatus=this.meeting.stage.status,this.canScreenShare="ALLOWED"===this.meeting.self.permissions.canProduceScreenshare},this.mediaPermissionUpdateListener=({kind:t,message:s})=>{if("screenshare"===t&&(this.shareScreenPermission=s,this.getState(),"COULD_NOT_START"===s&&this.dyteAPIError.emit({trace:this.t("screenshare.permissions"),message:this.t("screenshare.error.unknown")}),this.hasPermissionError())){const t={enabled:!0,kind:"screenshare"};this.stateUpdate.emit({activePermissionsMessage:t}),n.activePermissionsMessage=t}},this.reachedMaxScreenShares=()=>this.maxScreenShareCount>0&&this.screenShareCount>=this.maxScreenShareCount,this.toggleScreenShare=async()=>{var t;if(this.screenShareState.disable)return;if(this.hasPermissionError()){const t={enabled:!0,kind:"screenshare"};return this.stateUpdate.emit({activePermissionsMessage:t}),n.activePermissionsMessage=t,!1}const s=null===(t=this.meeting)||void 0===t?void 0:t.self;this.screenShareEnabled?s.disableScreenShare():null==s||!this.canScreenShare||this.reachedMaxScreenShares()||this.hasPermissionError()||(this.screenShareState=Object.assign(Object.assign({},this.screenShareState),{disable:!0}),await s.enableScreenShare(),this.screenShareState=Object.assign(Object.assign({},this.screenShareState),{disable:!1}),this.stateUpdate.emit({activeMoreMenu:!1}),n.activeMoreMenu=!1)},this.states=void 0,this.variant="button",this.meeting=void 0,this.size=void 0,this.iconPack=h,this.t=a(),this.maxScreenShareCount=-1,this.screenShareCount=0,this.screenShareEnabled=!1,this.canScreenShare=!1,this.shareScreenPermission="NOT_REQUESTED",this.screenShareState={tooltipLabel:this.t("screenshare.start"),label:this.t("screenshare.start"),icon:this.iconPack.share_screen_start,classList:{},showWarning:!1,disable:!1},this.stageStatus="OFF_STAGE"}connectedCallback(){o()?this.meetingChanged(this.meeting):r.error("[dyte-screenshare-toggle] Device does not support screensharing.")}disconnectedCallback(){var t,s,i,e,h,a;null===(t=this.meeting)||void 0===t||t.participants.joined.removeListener("screenShareUpdate",this.screenShareListener),null===(s=this.meeting)||void 0===s||s.participants.joined.removeListener("participantLeft",this.participantLeftListener),null===(i=this.meeting)||void 0===i||i.self.removeListener("screenShareUpdate",this.screenShareListener),null===(e=this.meeting)||void 0===e||e.self.removeListener("mediaPermissionUpdate",this.mediaPermissionUpdateListener),null===(a=null===(h=this.meeting)||void 0===h?void 0:h.stage)||void 0===a||a.removeListener("stageStatusUpdate",this.stageStatusListener)}meetingChanged(t){if(null!=t){const{self:s,stage:i}=t;this.canScreenShare="ALLOWED"===this.meeting.self.permissions.canProduceScreenshare,this.maxScreenShareCount=s.config.maxScreenShareCount,this.screenShareEnabled=s.screenShareEnabled;let e=0;for(const s of t.participants.joined.toArray())s.screenShareEnabled&&e++;this.screenShareCount=e,this.getState(),t.__internals__.logger.info("dyteScreenShare::initialise",{media:{screenshare:{enabled:this.screenShareEnabled,count:this.screenShareCount,maxAllowedCount:this.maxScreenShareCount}}}),this.stageStatus=t.stage.status,t.participants.joined.addListener("screenShareUpdate",this.screenShareListener),t.participants.joined.addListener("participantLeft",this.participantLeftListener),s.addListener("screenShareUpdate",this.screenShareListener),s.addListener("mediaPermissionUpdate",this.mediaPermissionUpdateListener),null==i||i.addListener("stageStatusUpdate",this.stageStatusListener)}}hasPermissionError(){return"SYSTEM_DENIED"===this.shareScreenPermission||"DENIED"===this.shareScreenPermission}getState(){let t="",s="",i="",e={};const h=this.hasPermissionError()&&!this.screenShareEnabled,a=this.reachedMaxScreenShares()&&!this.screenShareEnabled,r="COULD_NOT_START"===this.shareScreenPermission;this.screenShareEnabled&&!h?(s=this.t("screenshare.stop"),i=this.iconPack.share_screen_stop,e["red-icon"]=!0):(s=this.t("screenshare.start"),i=this.iconPack.share_screen_start),"SYSTEM_DENIED"===this.shareScreenPermission?(t=this.t("perm_sys_denied.screenshare"),e["red-icon"]=!0):"DENIED"===this.shareScreenPermission?(t=this.t("perm_denied.screenshare"),e["red-icon"]=!0):t=s,a&&(t=this.t("screenshare.error.max_count")),r&&(t=this.t("screenshare.error.unknown")),this.screenShareState={tooltipLabel:t,label:s,icon:i,classList:e,disable:h||a,showWarning:h||a||r}}render(){return o()&&this.canScreenShare&&!["OFF_STAGE","REQUESTED_TO_JOIN_STAGE"].includes(this.stageStatus)?i(e,{title:this.screenShareState.label},i("dyte-tooltip",{placement:"top",kind:"block",label:this.screenShareState.tooltipLabel,delay:600,part:"tooltip",iconPack:this.iconPack,t:this.t},i("dyte-controlbar-button",{part:"controlbar-button",size:this.size,iconPack:this.iconPack,t:this.t,variant:this.variant,label:this.screenShareState.label,icon:this.screenShareState.icon,class:this.screenShareState.classList,onClick:this.toggleScreenShare,disabled:this.screenShareState.disable,showWarning:this.screenShareState.showWarning}))):null}static get watchers(){return{meeting:["meetingChanged"]}}};c.style=":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:block}";export{c as dyte_screen_share_toggle}